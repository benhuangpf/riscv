$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $var wire 1 # clock $end
  $var wire 1 $ reset $end
  $var wire 1 % io_bundleAluControl_ctrlALUSrc $end
  $var wire 1 & io_bundleAluControl_ctrlJAL $end
  $var wire 4 ' io_bundleAluControl_ctrlOP [3:0] $end
  $var wire 1 ( io_bundleAluControl_ctrlSigned $end
  $var wire 1 ) io_bundleAluControl_ctrlBranch $end
  $var wire 32 * io_dataRead1 [31:0] $end
  $var wire 32 + io_dataRead2 [31:0] $end
  $var wire 32 , io_imm [31:0] $end
  $var wire 32 - io_pc [31:0] $end
  $var wire 1 . io_resultBranch $end
  $var wire 32 / io_resultAlu [31:0] $end
  $scope module Alu $end
   $var wire 1 # clock $end
   $var wire 1 $ reset $end
   $var wire 1 % io_bundleAluControl_ctrlALUSrc $end
   $var wire 1 & io_bundleAluControl_ctrlJAL $end
   $var wire 4 ' io_bundleAluControl_ctrlOP [3:0] $end
   $var wire 1 ( io_bundleAluControl_ctrlSigned $end
   $var wire 1 ) io_bundleAluControl_ctrlBranch $end
   $var wire 32 * io_dataRead1 [31:0] $end
   $var wire 32 + io_dataRead2 [31:0] $end
   $var wire 32 , io_imm [31:0] $end
   $var wire 32 - io_pc [31:0] $end
   $var wire 1 . io_resultBranch $end
   $var wire 32 / io_resultAlu [31:0] $end
   $var wire 32 0 oprand1 [31:0] $end
   $var wire 32 1 oprand2 [31:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
1$
0%
0&
b0000 '
0(
0)
b00000000000000000000000000000000 *
b00000000000000000000000000000000 +
b00000000000000000000000000000000 ,
b00000000000000000000000000000000 -
0.
b00000000000000000000000000000000 /
b00000000000000000000000000000000 0
b00000000000000000000000000000000 1
#1
1#
